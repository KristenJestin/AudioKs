<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AudioKs"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!--#region Other-->

    <sys:Double  x:Key="ChromeBar-Height">30</sys:Double>
    <Thickness x:Key="ChromeBar-Margin" Top="{StaticResource ChromeBar-Height}" />
    
    <sys:Double x:Key="MouseOver-Opacity">0.7</sys:Double>

    <sys:Double x:Key="LeftMenu-Width">200</sys:Double>
    <Thickness x:Key="LeftMenu-MarginAnimation" Left="-200" />

    <SolidColorBrush x:Key="NewPlaylistBrush" Color="#7F000000" />

    <!--#endregion-->

    <!--#region Fonts-->

    <FontFamily x:Key="Arimo">/Fonts/Arimo/#Arimo</FontFamily>
    <FontFamily x:Key="Uni">/Fonts/Uni/#UniSans</FontFamily>
    <FontFamily x:Key="Dyno">/Fonts/Dyno/#Dyno</FontFamily>
    <FontFamily x:Key="Titillium">/Fonts/Dyno/#TitilliumWeb</FontFamily>

    <!--#endregion-->

    <!--#region Animations-->

    <!--<Storyboard x:Key="SbShowMenu" >
                            <DoubleAnimation  Storyboard.TargetProperty="Width" To="200" DecelerationRatio=".7" Duration="0:0:0.6" />
                        </Storyboard>
                        <Storyboard x:Key="SbHideMenu">
                            <DoubleAnimation  Storyboard.TargetProperty="Width" To="0" AccelerationRatio=".7" Duration="0:0:0.6" />
                        </Storyboard>-->

    <!--Menu Slide-->
    <Storyboard x:Key="SbShowMenu" >
        <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0" DecelerationRatio=".7" Duration="0:0:0.6" />
    </Storyboard>
    <Storyboard x:Key="SbHideMenu">
        <ThicknessAnimation Storyboard.TargetProperty="Margin" To="{StaticResource LeftMenu-MarginAnimation}" AccelerationRatio=".7" Duration="0:0:0.6" />
    </Storyboard>

    <!--Menu Image Rotation-->
    <Storyboard x:Key="SbRotateIn" >
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                            To="180" DecelerationRatio=".7" Duration="0:0:0.4" />
    </Storyboard>
    <Storyboard x:Key="SbRotateOut">
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"
                            To="0" DecelerationRatio=".7" Duration="0:0:0.4" />
    </Storyboard>

    <!--#endregion-->

    <!--#region Buttons-->

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Parent" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Opacity" Value="{StaticResource MouseOver-Opacity}" />
                            <Setter TargetName="Parent" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButton" TargetType="{x:Type Button}">
        <Setter Property = "Focusable" Value="False" />
        <Setter Property = "Height" Value="{Binding Height}" />
        <Setter Property = "Width" Value="{Binding Height}" />
        <Setter Property = "Cursor" Value="Hand" />
        <Setter Property = "RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property = "RenderTransform" >
            <Setter.Value >
                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property = "Template" >
            <Setter.Value >
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent = "Button.MouseEnter" >
                <BeginStoryboard >
                    <Storyboard >
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                             AccelerationRatio="0.4" DecelerationRatio="0.5" To="1.2" Duration="0:0:.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                             AccelerationRatio= "0.4" DecelerationRatio= "0.5" To= "1.2" Duration= "0:0:.2" />
                    </Storyboard >
                </BeginStoryboard >
            </EventTrigger >
            <EventTrigger RoutedEvent= "Button.MouseLeave" >
                <BeginStoryboard >
                    <Storyboard >
                        <DoubleAnimation Storyboard.TargetProperty= "RenderTransform.ScaleX" To= "1" Duration= "0:0:.1" />
                        <DoubleAnimation Storyboard.TargetProperty= "RenderTransform.ScaleY" To= "1" Duration= "0:0:.1" />
                    </Storyboard >
                </BeginStoryboard >
            </EventTrigger >
        </Style.Triggers >
    </Style >

    <Style x:Key="RoundButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#FFC6C6C6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="150" Background="#FFC6C6C6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Slider-->

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="White" Height="{TemplateBinding Height}" CornerRadius="0,8,8,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="{StaticResource PrimaryBrush}" Height="{TemplateBinding Height}" CornerRadius="8,0,0,8" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="Height" Value="10" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Ellipse Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Fill="{StaticResource PrimaryBrush}"></Ellipse>
                        <Ellipse x:Name="ElliIn" Height="0" Width="0" Fill="{StaticResource PrimaryDarkBrush}"></Ellipse>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Height" Value="7" TargetName="ElliIn" />
                            <Setter Property="Width" Value="7" TargetName="ElliIn" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Volume-->
    <ControlTemplate x:Key="Vol_Slider" TargetType="Slider">
        <Grid MinHeight="6">

            <Border Background="{StaticResource PrimaryBrush}" Height="6" CornerRadius="3"></Border>
            <Track>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}" Height="6"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" Height="2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Height="6" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <Track x:Name="PART_Track">
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" Height="12" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                </Track.Thumb>
            </Track>

        </Grid>
    </ControlTemplate>

    <Style x:Key="Volume_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsMoveToPointEnabled" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource Vol_Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Time-->
    <ControlTemplate x:Key="Ti_Slider" TargetType="Slider">
        <Grid MinHeight="8">

            <Border Background="{StaticResource PrimaryBrush}" Height="8"></Border>
            <Track>
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}" Height="8"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" Height="3" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Height="8" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <Track x:Name="PART_Track">
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" Height="18" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                </Track.Thumb>
            </Track>

        </Grid>
    </ControlTemplate>

    <Style x:Key="Time_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsMoveToPointEnabled" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource Ti_Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Scroll Bar-->

    <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                        <Path HorizontalAlignment="Center"
                                  VerticalAlignment="Center"                                
                                  Fill="{StaticResource ScrollArrowColor}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!--<Image Source="Images/play.png" ></Image>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                        Value="{StaticResource ScrollArrowPressColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                        Value="{StaticResource ScrollArrowPressDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource ScrollBackgroundColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                        Value="{StaticResource ScrollThumbOverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="16"/>
            </Grid.RowDefinitions>
            <Border
                  Grid.RowSpan="3"
                  CornerRadius="2"
                  Background="Transparent" />
            <RepeatButton Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Height="18"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track  Name="PART_Track"
                      Grid.Row="1"
                      IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                        Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                              Margin="0"
                              Background="{StaticResource ScrollThumbColor}"
                              BorderBrush="{StaticResource ScrollThumbBorderColor}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                              Style="{StaticResource ScrollBarLineButton}"
                              Height="18"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
                                    TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="16"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                        CornerRadius="2"
                        Background="Transparent" />
            <RepeatButton Grid.Column="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="16"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                        Grid.Column="1"
                        IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                        Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="0"
                               Background="{StaticResource ScrollThumbColor}"
                               BorderBrush="{StaticResource ScrollThumbBorderColor}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="18"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="16" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for overall  ScrollViewer -->
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

    <!--#region Datagrid-->

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AlternationCount" Value="2" />

        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="{x:Type DataGridTextColumn}" TargetType="{x:Type DataGridTextColumn}">
        <Setter Property="ElementStyle" Value="{StaticResource TrimText}" />
        <Setter Property="CanUserReorder" Value="False" />
        <Setter Property="CanUserResize" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="35" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource Dyno}" />
        <Setter Property="Padding" Value="20,0" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="20,0,20,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region TextBlock-->

    <Style x:Key="TrimText" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="MenuItem" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="FontFamily" Value="{StaticResource Dyno}" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding IsCurrentPage}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region Image-->

    <Style x:Key="ShowGridHover" TargetType="{x:Type Grid}">
        <Setter Property="Grid.Opacity" Value="0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding fake}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=GridPlay}" Value="True" />
                    <Condition Binding="{Binding fake}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Grid.Opacity" Value="100" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region CheckBox-->

    <Style TargetType="{x:Type CheckBox}" x:Key="Check">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="holder">
                        <Rectangle x:Name="Bar" Width="26" Height="6" Fill="{StaticResource CheckBoxUncheckBarColor}" />
                        <Ellipse x:Name="Circle" Fill="{StaticResource CheckBoxUncheckCircleColor}" Height="16" Width="16" Margin="0,0,26,0" StrokeThickness="0"/>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Bar" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FFD3D328" Duration="0:0:0.15" />
                                        <ColorAnimation Storyboard.TargetName="Circle" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FFFFFF00" Duration="0:0:0.15" />
                                        <ThicknessAnimation Storyboard.TargetName="Circle" Storyboard.TargetProperty="Margin" To="26,0,0,0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Bar" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FF9E9E9E" Duration="0:0:0.1" />
                                        <ColorAnimation Storyboard.TargetName="Circle" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FFDCDCDC" Duration="0:0:0.15" />
                                        <ThicknessAnimation Storyboard.TargetName="Circle" Storyboard.TargetProperty="Margin" To="0,0,26,0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    -->
                        <!--<Setter TargetName="checkboxImage" Property="Source" Value="Images/mail.png"/>-->
                        <!--
                                </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
</ResourceDictionary>